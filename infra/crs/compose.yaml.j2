services:
{%- for crs in crs_list %}

{%- if mode == 'build' %}
  # Key Provisioner {{ loop.index }} - {{ crs.name }}
  {{ crs.name }}_key_provisioner:
    profiles:
      - {{ crs.name }}_builder
    build:
      context: {{ oss_fuzz_path }}/infra/crs
      dockerfile: key_provisioner.Dockerfile
    environment:
      - LITELLM_URL=http://crs-litellm-{{ config_hash }}-litellm-1:4000
      - LITELLM_MASTER_KEY=${LITELLM_MASTER_KEY}
    networks:
      - {{ config_hash }}_crs_network
    volumes:
      - {{ config_hash }}_keys_data_{{ crs.name }}:/keys/{{ crs.name }}
      - {{ config_dir }}:/config:ro
    command: ["python", "key_provisioner.py", "--config-dir", "/config", "--crs", "{{ crs.name }}"]
    # restart: on-failure:5

  # CRS Builder {{ loop.index }} - {{ crs.name }}
  {{ crs.name }}_builder:
    profiles:
      - {{ crs.name }}_builder
    image: {{ project }}_{{ crs.name }}_builder
    depends_on:
      {{ crs.name }}_key_provisioner:
        condition: service_started
    environment:
      - LITELLM_URL=http://crs-litellm-{{ config_hash }}-litellm-1:4000
      - FUZZING_ENGINE={{ engine }}
      - SANITIZER={{ sanitizer }}
      - ARCHITECTURE={{ architecture }}
      - PROJECT_NAME={{ project }}
      - FUZZING_LANGUAGE={{ project_language }}
      - HELPER=True
    networks:
      - {{ config_hash }}_crs_network
    build:
      context: {{ crs.path }}
      dockerfile: builder.Dockerfile
      additional_contexts:
        project: {{ oss_fuzz_path }}/projects/{{ project }}
      args:
        - CRS_TARGET={{ project }}
        - PROJECT_PATH={{ oss_fuzz_path }}/projects/{{ project }}
        - parent_image=gcr.io/oss-fuzz/{{ project }}
    volumes:
      - {{ oss_fuzz_path }}/build/out/{{ crs.name }}/{{ project }}:/out
      - {{ oss_fuzz_path }}/build/work/{{ crs.name }}/{{ project }}:/work
      - {{ config_hash }}_keys_data_{{ crs.name }}:/keys:ro
{%- endif %}

{%- if mode == 'run' %}
  # CRS Runner {{ loop.index }} - {{ crs.name }}
  {{ crs.name }}_runner:
    image: {{ crs.name }}_runner
    environment:
      - LITELLM_URL=http://crs-litellm-{{ config_hash }}-litellm-1:4000
      - FUZZING_ENGINE={{ engine }}
      - SANITIZER={{ sanitizer }}
      - RUN_FUZZER_MODE=interactive
      - HELPER=True
      - CPUSET_CPUS={{ crs.cpuset }}
      - MEMORY_LIMIT={{ crs.memory_limit | string }}
    networks:
      - {{ config_hash }}_crs_network
    cpuset: {{ crs.cpuset }}
    build:
      context: {{ crs.path }}
      dockerfile: runner.Dockerfile
      args:
        - PROJECT_PATH={{ oss_fuzz_path }}/projects/{{ project }}
    volumes:
      - {{ oss_fuzz_path }}/build/out/{{ crs.name }}/{{ project }}:/out
      - {{ config_hash }}_keys_data_{{ crs.name }}:/keys:ro
    deploy:
      resources:
        limits:
          memory: {{ crs.memory_limit }}
    command: {{ fuzzer_command | tojson }}
{%- endif %}
{%- endfor %}

networks:
  {{ config_hash }}_crs_network:
    external: true
    name: {{ config_hash }}_crs_network

volumes:
{%- for crs in crs_list %}
  {{ config_hash }}_keys_data_{{ crs.name }}:
    external: true
    name: {{ config_hash }}_keys_data_{{ crs.name }}
{%- endfor %}
